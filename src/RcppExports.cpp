// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bvnd
double bvnd(double DH, double DK, double R);
RcppExport SEXP _pumBayes_bvnd(SEXP DHSEXP, SEXP DKSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type DH(DHSEXP);
    Rcpp::traits::input_parameter< double >::type DK(DKSEXP);
    Rcpp::traits::input_parameter< double >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(bvnd(DH, DK, R));
    return rcpp_result_gen;
END_RCPP
}
// bvndvec
NumericVector bvndvec(NumericVector DH, NumericVector DK, NumericVector R);
RcppExport SEXP _pumBayes_bvndvec(SEXP DHSEXP, SEXP DKSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type DH(DHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type DK(DKSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(bvndvec(DH, DK, R));
    return rcpp_result_gen;
END_RCPP
}
// sample_t
double sample_t(double df, double location, double scale);
RcppExport SEXP _pumBayes_sample_t(SEXP dfSEXP, SEXP locationSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type location(locationSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_t(df, location, scale));
    return rcpp_result_gen;
END_RCPP
}
// truncated_t_sample
double truncated_t_sample(double df, double location, double scale, bool upper);
RcppExport SEXP _pumBayes_truncated_t_sample(SEXP dfSEXP, SEXP locationSEXP, SEXP scaleSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type location(locationSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(truncated_t_sample(df, location, scale, upper));
    return rcpp_result_gen;
END_RCPP
}
// sample_probit_static_rcpp
List sample_probit_static_rcpp(arma::mat vote_m, arma::mat all_param_draws, arma::mat y_star_m_1, arma::mat y_star_m_2, arma::mat y_star_m_3, int leg_start_ind, int alpha_v_1_start_ind, int alpha_v_2_start_ind, int delta_v_1_start_ind, int delta_v_2_start_ind, double leg_mean, double leg_sd, arma::vec alpha_mean_v, arma::mat alpha_cov_s, arma::vec delta_mean_v, arma::mat delta_cov_s, double nu, int num_iter, int start_iter, int keep_iter, double flip_rate, int pos_ind, bool verbose);
RcppExport SEXP _pumBayes_sample_probit_static_rcpp(SEXP vote_mSEXP, SEXP all_param_drawsSEXP, SEXP y_star_m_1SEXP, SEXP y_star_m_2SEXP, SEXP y_star_m_3SEXP, SEXP leg_start_indSEXP, SEXP alpha_v_1_start_indSEXP, SEXP alpha_v_2_start_indSEXP, SEXP delta_v_1_start_indSEXP, SEXP delta_v_2_start_indSEXP, SEXP leg_meanSEXP, SEXP leg_sdSEXP, SEXP alpha_mean_vSEXP, SEXP alpha_cov_sSEXP, SEXP delta_mean_vSEXP, SEXP delta_cov_sSEXP, SEXP nuSEXP, SEXP num_iterSEXP, SEXP start_iterSEXP, SEXP keep_iterSEXP, SEXP flip_rateSEXP, SEXP pos_indSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type vote_m(vote_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type all_param_draws(all_param_drawsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_1(y_star_m_1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_2(y_star_m_2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_3(y_star_m_3SEXP);
    Rcpp::traits::input_parameter< int >::type leg_start_ind(leg_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type alpha_v_1_start_ind(alpha_v_1_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type alpha_v_2_start_ind(alpha_v_2_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type delta_v_1_start_ind(delta_v_1_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type delta_v_2_start_ind(delta_v_2_start_indSEXP);
    Rcpp::traits::input_parameter< double >::type leg_mean(leg_meanSEXP);
    Rcpp::traits::input_parameter< double >::type leg_sd(leg_sdSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha_mean_v(alpha_mean_vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_cov_s(alpha_cov_sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_mean_v(delta_mean_vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta_cov_s(delta_cov_sSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type start_iter(start_iterSEXP);
    Rcpp::traits::input_parameter< int >::type keep_iter(keep_iterSEXP);
    Rcpp::traits::input_parameter< double >::type flip_rate(flip_rateSEXP);
    Rcpp::traits::input_parameter< int >::type pos_ind(pos_indSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_probit_static_rcpp(vote_m, all_param_draws, y_star_m_1, y_star_m_2, y_star_m_3, leg_start_ind, alpha_v_1_start_ind, alpha_v_2_start_ind, delta_v_1_start_ind, delta_v_2_start_ind, leg_mean, leg_sd, alpha_mean_v, alpha_cov_s, delta_mean_v, delta_cov_s, nu, num_iter, start_iter, keep_iter, flip_rate, pos_ind, verbose));
    return rcpp_result_gen;
END_RCPP
}
// sample_probit_dynamic_rcpp_flip
List sample_probit_dynamic_rcpp_flip(arma::mat vote_m, arma::mat all_param_draws, arma::mat y_star_m_1, arma::mat y_star_m_2, arma::mat y_star_m_3, arma::uvec judge_start_inds, arma::uvec judge_end_inds, arma::uvec case_years, arma::umat case_judge_years_ind_m, arma::uvec judge_year_v, int alpha_v_1_start_ind, int alpha_v_2_start_ind, int delta_v_1_start_ind, int delta_v_2_start_ind, int rho_ind, arma::vec alpha_mean_v, arma::mat alpha_cov_s, arma::vec delta_mean_v, arma::mat delta_cov_s, double rho_mean, double rho_sigma, double rho_sd, double nu, int num_iter, int start_iter, int keep_iter, double flip_rate, arma::uvec pos_judge_ind, arma::uvec neg_judge_ind, arma::uvec pos_judge_year, arma::uvec neg_judge_year, bool verbose);
RcppExport SEXP _pumBayes_sample_probit_dynamic_rcpp_flip(SEXP vote_mSEXP, SEXP all_param_drawsSEXP, SEXP y_star_m_1SEXP, SEXP y_star_m_2SEXP, SEXP y_star_m_3SEXP, SEXP judge_start_indsSEXP, SEXP judge_end_indsSEXP, SEXP case_yearsSEXP, SEXP case_judge_years_ind_mSEXP, SEXP judge_year_vSEXP, SEXP alpha_v_1_start_indSEXP, SEXP alpha_v_2_start_indSEXP, SEXP delta_v_1_start_indSEXP, SEXP delta_v_2_start_indSEXP, SEXP rho_indSEXP, SEXP alpha_mean_vSEXP, SEXP alpha_cov_sSEXP, SEXP delta_mean_vSEXP, SEXP delta_cov_sSEXP, SEXP rho_meanSEXP, SEXP rho_sigmaSEXP, SEXP rho_sdSEXP, SEXP nuSEXP, SEXP num_iterSEXP, SEXP start_iterSEXP, SEXP keep_iterSEXP, SEXP flip_rateSEXP, SEXP pos_judge_indSEXP, SEXP neg_judge_indSEXP, SEXP pos_judge_yearSEXP, SEXP neg_judge_yearSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type vote_m(vote_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type all_param_draws(all_param_drawsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_1(y_star_m_1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_2(y_star_m_2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_3(y_star_m_3SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type judge_start_inds(judge_start_indsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type judge_end_inds(judge_end_indsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type case_years(case_yearsSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type case_judge_years_ind_m(case_judge_years_ind_mSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type judge_year_v(judge_year_vSEXP);
    Rcpp::traits::input_parameter< int >::type alpha_v_1_start_ind(alpha_v_1_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type alpha_v_2_start_ind(alpha_v_2_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type delta_v_1_start_ind(delta_v_1_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type delta_v_2_start_ind(delta_v_2_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type rho_ind(rho_indSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha_mean_v(alpha_mean_vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_cov_s(alpha_cov_sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_mean_v(delta_mean_vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta_cov_s(delta_cov_sSEXP);
    Rcpp::traits::input_parameter< double >::type rho_mean(rho_meanSEXP);
    Rcpp::traits::input_parameter< double >::type rho_sigma(rho_sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type rho_sd(rho_sdSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type start_iter(start_iterSEXP);
    Rcpp::traits::input_parameter< int >::type keep_iter(keep_iterSEXP);
    Rcpp::traits::input_parameter< double >::type flip_rate(flip_rateSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type pos_judge_ind(pos_judge_indSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type neg_judge_ind(neg_judge_indSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type pos_judge_year(pos_judge_yearSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type neg_judge_year(neg_judge_yearSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_probit_dynamic_rcpp_flip(vote_m, all_param_draws, y_star_m_1, y_star_m_2, y_star_m_3, judge_start_inds, judge_end_inds, case_years, case_judge_years_ind_m, judge_year_v, alpha_v_1_start_ind, alpha_v_2_start_ind, delta_v_1_start_ind, delta_v_2_start_ind, rho_ind, alpha_mean_v, alpha_cov_s, delta_mean_v, delta_cov_s, rho_mean, rho_sigma, rho_sd, nu, num_iter, start_iter, keep_iter, flip_rate, pos_judge_ind, neg_judge_ind, pos_judge_year, neg_judge_year, verbose));
    return rcpp_result_gen;
END_RCPP
}
// calc_waic_probit_bggum_three_utility_block_rcpp
arma::vec calc_waic_probit_bggum_three_utility_block_rcpp(arma::mat leg_ideology, arma::mat alpha_m, arma::mat delta_m, arma::mat case_vote_m, arma::uvec case_year, arma::mat block_m);
RcppExport SEXP _pumBayes_calc_waic_probit_bggum_three_utility_block_rcpp(SEXP leg_ideologySEXP, SEXP alpha_mSEXP, SEXP delta_mSEXP, SEXP case_vote_mSEXP, SEXP case_yearSEXP, SEXP block_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type leg_ideology(leg_ideologySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_m(alpha_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta_m(delta_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type case_vote_m(case_vote_mSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type case_year(case_yearSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type block_m(block_mSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_waic_probit_bggum_three_utility_block_rcpp(leg_ideology, alpha_m, delta_m, case_vote_m, case_year, block_m));
    return rcpp_result_gen;
END_RCPP
}
// sample_probit_dynamic_rcpp
List sample_probit_dynamic_rcpp(arma::mat vote_m, arma::mat all_param_draws, arma::mat y_star_m_1, arma::mat y_star_m_2, arma::mat y_star_m_3, arma::uvec judge_start_inds, arma::uvec judge_end_inds, arma::uvec case_years, arma::umat case_judge_years_ind_m, arma::uvec judge_year_v, int alpha_v_1_start_ind, int alpha_v_2_start_ind, int delta_v_1_start_ind, int delta_v_2_start_ind, int rho_ind, arma::vec alpha_mean_v, arma::mat alpha_cov_s, arma::vec delta_mean_v, arma::mat delta_cov_s, double rho_mean, double rho_sigma, double rho_sd, double nu, int num_iter, int start_iter, int keep_iter, double flip_rate, arma::uvec pos_judge_ind, arma::uvec neg_judge_ind, arma::uvec pos_judge_year, arma::uvec neg_judge_year, bool verbose);
RcppExport SEXP _pumBayes_sample_probit_dynamic_rcpp(SEXP vote_mSEXP, SEXP all_param_drawsSEXP, SEXP y_star_m_1SEXP, SEXP y_star_m_2SEXP, SEXP y_star_m_3SEXP, SEXP judge_start_indsSEXP, SEXP judge_end_indsSEXP, SEXP case_yearsSEXP, SEXP case_judge_years_ind_mSEXP, SEXP judge_year_vSEXP, SEXP alpha_v_1_start_indSEXP, SEXP alpha_v_2_start_indSEXP, SEXP delta_v_1_start_indSEXP, SEXP delta_v_2_start_indSEXP, SEXP rho_indSEXP, SEXP alpha_mean_vSEXP, SEXP alpha_cov_sSEXP, SEXP delta_mean_vSEXP, SEXP delta_cov_sSEXP, SEXP rho_meanSEXP, SEXP rho_sigmaSEXP, SEXP rho_sdSEXP, SEXP nuSEXP, SEXP num_iterSEXP, SEXP start_iterSEXP, SEXP keep_iterSEXP, SEXP flip_rateSEXP, SEXP pos_judge_indSEXP, SEXP neg_judge_indSEXP, SEXP pos_judge_yearSEXP, SEXP neg_judge_yearSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type vote_m(vote_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type all_param_draws(all_param_drawsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_1(y_star_m_1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_2(y_star_m_2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_star_m_3(y_star_m_3SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type judge_start_inds(judge_start_indsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type judge_end_inds(judge_end_indsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type case_years(case_yearsSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type case_judge_years_ind_m(case_judge_years_ind_mSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type judge_year_v(judge_year_vSEXP);
    Rcpp::traits::input_parameter< int >::type alpha_v_1_start_ind(alpha_v_1_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type alpha_v_2_start_ind(alpha_v_2_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type delta_v_1_start_ind(delta_v_1_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type delta_v_2_start_ind(delta_v_2_start_indSEXP);
    Rcpp::traits::input_parameter< int >::type rho_ind(rho_indSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha_mean_v(alpha_mean_vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_cov_s(alpha_cov_sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_mean_v(delta_mean_vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta_cov_s(delta_cov_sSEXP);
    Rcpp::traits::input_parameter< double >::type rho_mean(rho_meanSEXP);
    Rcpp::traits::input_parameter< double >::type rho_sigma(rho_sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type rho_sd(rho_sdSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type start_iter(start_iterSEXP);
    Rcpp::traits::input_parameter< int >::type keep_iter(keep_iterSEXP);
    Rcpp::traits::input_parameter< double >::type flip_rate(flip_rateSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type pos_judge_ind(pos_judge_indSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type neg_judge_ind(neg_judge_indSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type pos_judge_year(pos_judge_yearSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type neg_judge_year(neg_judge_yearSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_probit_dynamic_rcpp(vote_m, all_param_draws, y_star_m_1, y_star_m_2, y_star_m_3, judge_start_inds, judge_end_inds, case_years, case_judge_years_ind_m, judge_year_v, alpha_v_1_start_ind, alpha_v_2_start_ind, delta_v_1_start_ind, delta_v_2_start_ind, rho_ind, alpha_mean_v, alpha_cov_s, delta_mean_v, delta_cov_s, rho_mean, rho_sigma, rho_sd, nu, num_iter, start_iter, keep_iter, flip_rate, pos_judge_ind, neg_judge_ind, pos_judge_year, neg_judge_year, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pumBayes_bvnd", (DL_FUNC) &_pumBayes_bvnd, 3},
    {"_pumBayes_bvndvec", (DL_FUNC) &_pumBayes_bvndvec, 3},
    {"_pumBayes_sample_t", (DL_FUNC) &_pumBayes_sample_t, 3},
    {"_pumBayes_truncated_t_sample", (DL_FUNC) &_pumBayes_truncated_t_sample, 4},
    {"_pumBayes_sample_probit_static_rcpp", (DL_FUNC) &_pumBayes_sample_probit_static_rcpp, 23},
    {"_pumBayes_sample_probit_dynamic_rcpp_flip", (DL_FUNC) &_pumBayes_sample_probit_dynamic_rcpp_flip, 32},
    {"_pumBayes_calc_waic_probit_bggum_three_utility_block_rcpp", (DL_FUNC) &_pumBayes_calc_waic_probit_bggum_three_utility_block_rcpp, 6},
    {"_pumBayes_sample_probit_dynamic_rcpp", (DL_FUNC) &_pumBayes_sample_probit_dynamic_rcpp, 32},
    {NULL, NULL, 0}
};

RcppExport void R_init_pumBayes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
